apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

//#定义混淆代码的路径
def proguardPath = "../proguard/code/proguard-rules.pro"

// 服务器地址
def String base_url_release = "\"https://www.wanandroid.com\""

android {

    compileSdkVersion cfgs.compileSdkVersion
    buildToolsVersion cfgs.buildToolsVersion

    defaultConfig {
        applicationId "com.lengjiye.codelibrarykotlin"
        minSdkVersion cfgs.minSdkVersion
        targetSdkVersion cfgs.targetSdkVersion
        versionCode cfgs.versionCode
        versionName cfgs.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    signingConfigs {
        wanAndroid {
            //绝对路径和相对路径都可以
            storeFile file("../keystores/lengjiye.keystore")  //签名文件
            storePassword "ljy019916"                       //密码
            keyAlias "lengjiye"
            keyPassword "ljy019916"
        }

    }

    dataBinding {
        enabled = true
    }

    buildTypes {

        debug{
            debuggable true
            minifyEnabled false
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles proguardPath
            signingConfig signingConfigs.wanAndroid
            buildConfigField("String", "BASE_URL", base_url_release)
        }

        qa{
            debuggable true
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles proguardPath
            signingConfig signingConfigs.wanAndroid
            buildConfigField("String", "BASE_URL", base_url_release)
        }

        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles proguardPath
            signingConfig signingConfigs.wanAndroid
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField("String", "BASE_URL", base_url_release)
        }
    }
}

project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = [
                "-Xjsr305=strict",
                "-progressive"
        ]
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation "junit:junit:$cfgs.junit"
    androidTestImplementation "androidx.test:runner:$cfgs.test_runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$cfgs.test_core"

    implementation "androidx.constraintlayout:constraintlayout:$cfgs.constraintlayout"
    implementation "androidx.core:core-ktx:$cfgs.android_ktx"

    implementation project(':base')
    implementation project(':network')
    implementation project(':tools')
    implementation project(':test')

    implementation "com.airbnb.android:lottie:$cfgs.lottieVersion"
    implementation "com.ashokvarma.android:bottom-navigation-bar:$cfgs.navigationVersion"
}
